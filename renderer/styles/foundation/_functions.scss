@use "sass:math";
@import "./variables";

@mixin pc{
	@media (min-width: $pc){
		@content
	}
};

@mixin sp{
	@media (max-width: $sp){
		@content
	}
};

/**
 * 日本語フォントのweight設定
 */
$jaWeightList: (
	L: 400,
	M: 500,
	B: 600,
);

@function jaWeightList($key) {
	@return map-get($map: $jaWeightList, $key: $key);
}

@function jaW($w: M) {
	@return jaWeightList($w);
}


@mixin fontEn($w: 700) {
	@if $w == 700 {
		font-family: "VastLBold";
	} @else {
		font-family: "VastLRegular";
	}
}


/**
 * PCのデザインに対する可変幅
 */
@function pc($px, $min: 0, $max: 0, $viewport: $pcBaseWidth) {
	$vw : math.div(math.floor(math.div($px, $viewport) * 10000vw), 100);
	@if $min == 0 {
		$min: $px * (math.div($pcMaxWidth, $pcBaseWidth)) * 1px;
	}

	@if $min == 0 and $max == 0 {
		@return $vw;
	} @else if $min != 0 and $max != 0 {
		@return clamp($min, $vw, $max);
	} @else if $min != 0 {
		@return min($min, $vw);
	} @else {
		@return max($max, $vw);
	}
}

/**
 * SPのデザインに対する可変幅
 */
@function sp($px, $min: 0, $max: 0, $viewport: $spBaseWidth) {
	$vw : math.div(math.floor(math.div($px, $viewport) * 10000vw), 100);
	@if $min == 0 {
		$min: $px * (math.div($spMaxWidth, $spBaseWidth)) * 1px;
	}

	@if $min == 0 and $max == 0 {
		@return $vw;
	} @else if $min != 0 and $max != 0 {
		@return clamp($min, $vw, $max);
	} @else if $min != 0 {
		@return min($min, $vw);
	} @else {
		@return max($max, $vw);
	}
}

@mixin pcBaseContents {
	width: pc(1160);
	margin-left: auto;
	margin-right: auto;
}

@mixin spBaseContents {
	width: sp(336);
	margin-left: auto;
	margin-right: auto;
}


@mixin selectReset {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	background: transparent;
	border: none;
	border-radius: 0;
	font: inherit;
	outline: none;
	cursor: pointer;
	&::-ms-expand {
		display: none;
	}
}

@mixin formReset {
	button,
	input,
	textarea {
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
		background: transparent;
		border: none;
		border-radius: 0;
		font: inherit;
		outline: none;
	}

	textarea {
		resize: vertical;
	}

	input[type='checkbox'],
	input[type='radio'] {
		padding: 0;
		margin: 0;
		opacity: 0;
		cursor: pointer;
	}

	input[type='submit'],
	input[type='button'],
	label,
	button {
		cursor: pointer;
	}
	
	select {
		@include selectReset;
	}
}